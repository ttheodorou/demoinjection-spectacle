<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd"
	default-autowire="byName">

	<context:annotation-config />

	<context:component-scan base-package="com.objis.spring.demoinjection"></context:component-scan>

<!-- 	<bean id="instrument" class="com.objis.spring.demoinjection.Saxophone"></bean> -->
	<!--1) Instrument : saxophone (création et déclaration d'un nouveau bean 
		avec id='saxophone') -->
	<!-- <bean id="saxophone" class="com.objis.spring.demoinjection.Saxophone" -->
	<!-- scope="prototype"> -->
	<!-- </bean> -->

	<!--2) Instrument : violon (création et déclaration d'un nouveau bean avec 
		id='violon') -->
	<!-- <bean id="violon" class="com.objis.spring.demoinjection.Violon"></bean> -->


	<!--3) Instrument : guitare (création et déclaration d'un nouveau bean avec 
		id='guitare') -->
	<!-- <bean id="guitare" class="com.objis.spring.demoinjection.Guitare"></bean> -->

	<!--4) Musicien : Olivier est un saxophoniste . Il joue morceau 'Vive le 
		vent...' -->
	<bean id="olivier" class="com.objis.spring.demoinjection.Musicien">
		<property name="morceau" value="'Vive le vent...'"></property>
		<!-- <property name="instrument" ref="saxophone"></property> -->
	</bean>
	<bean id="olivier2" class="com.objis.spring.demoinjection.Musicien">
		<property name="morceau" value="'Vive le vent...'"></property>
		<property name="instrument" ref="saxophone"></property>
	</bean>

	<!--5) Musicien : Jean-Marc est un saxophoniste . Il utilise un saxophone 
		différent de celui d'Olivier (ne pas faire un deuxième bean saxophone !) -->
	<bean id="jean-marc" class="com.objis.spring.demoinjection.Musicien">
		<property name="morceau" value="'Petit Papa Noël...'"></property>
		<property name="instrument" ref="saxophone"></property>
	</bean>

	<!--6) Musicien : Caroline est violoniste -->
	<bean id="caroline" class="com.objis.spring.demoinjection.Musicien">
		<property name="morceau" value="'Sous le soleil des tropiques...'"></property>
		<property name="instrument" ref="violon"></property>
	</bean>

	<!--7) Musicien : Franck est guitariste -->
	<bean id="franck" class="com.objis.spring.demoinjection.Musicien">
		<property name="morceau" value="'numb ...'"></property>
		<property name="instrument" ref="guitare"></property>
	</bean>

	<!--8) Musicien : Julien joue plusieurs instruments, dont 2 saxophones (demo 
		<list>) . Analyser et Utiliser classe GroupeMusique fournie -->
	<bean id="julien" class="com.objis.spring.demoinjection.GroupeMusique">
		<property name="instruments">
			<list>
				<ref bean="saxophone" />
				<ref bean="saxophone" />
			</list>
		</property>
	</bean>

	<!--9) Musicien : Alain joue plusieurs instruments , dont 2 saxophones (demo 
		<set>) -->
	<bean id="alain" class="com.objis.spring.demoinjection.GroupeMusique">
		<property name="instruments">
			<set>
				<ref bean="saxophone" />
				<ref bean="saxophone" />
			</set>
		</property>
	</bean>

	<bean id="alain2" class="com.objis.spring.demoinjection.GroupeMusique">
		<property name="instruments">
			<set>
				<bean class="com.objis.spring.demoinjection.Saxophone" scope="prototype"></bean>
				<bean class="com.objis.spring.demoinjection.Saxophone" scope="prototype"></bean>
			</set>
		</property>
	</bean>

	<!--10) Louis joue le même morceau qu'Olivier (utiliser SpEL. Vous aurez 
		besoin d'ajouter les jars context, asm et expressions de spring et il faut 
		utiliser ApplicationContext à la place de BeanFactory -->

	<!--11) Optimisation - Réduction XML : démo classe abstraite (chercher dans 
		doc reference attribut 'parent') -->

	<!--12) Optimisation - Réduction XML : démo AutoWiring 'byName' -->

	<!--13) Optimisation - Réduction XML : démo default-autowiring='byName' -->

	<!--14) Optimisation - Réduction XML : démo AutoWiring 'byType' -->

	<!--15) Optimisation - Réduction XML : démo <context:annotation-config/> 
		+ @AutoWired -->

	<!--16) Optimisation - Réduction XML : démo <context:component-scan base-package='com.demo'/> 
		+ @Service -->

	<!--17) Optimisation - Réduction XML : démo <context:component-scan base-package='com.demo'/> 
		+ @Service . (PAs de filtre au scan: use-default-filters="false") -->

	<!--18) Optimisation - Réduction XML : démo <context:component-scan base-package='com.demo'/> 
		+ @Configuration + @Bean -->

	<!--19) Optimisation - Cycle de vie : accorder un instrument lors de son 
		initialisation (Ex : guitare) (chercher dans doc reference attribut 'init-method') -->

	<!--20) Optimisation - Cycle de vie : nettoyer un instrument lors de sa 
		destruction (chercher dans doc reference attribut 'destroy-method') -->

</beans>
